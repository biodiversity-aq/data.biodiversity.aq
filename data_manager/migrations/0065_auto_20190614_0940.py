# Generated by Django 2.2.1 on 2019-06-14 09:40

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data_manager', '0064_auto_20190510_1518'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='dataset',
            name='deleted',
        ),
        migrations.AlterField(
            model_name='dataset',
            name='abstract',
            field=models.TextField(blank=True, help_text='A brief overview describing the dataset', null=True),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='alternate_identifiers',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True), blank=True, help_text='an array of identifiers for this dataset such as a url link or doi', null=True, size=None),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='bounding_box',
            field=django.contrib.gis.db.models.fields.PolygonField(blank=True, help_text='A container for spatial information about a resource; allows a bounding box for the overall coverage (in lat long), and also allows description of arbitrary polygons with exclusions.', null=True, srid=4326),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='citation',
            field=models.TextField(blank=True, help_text='A single literature citation with an optional identifier', null=True),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='dataset_key',
            field=models.TextField(help_text='a UUID that uniquely identify this dataset on GBIF', unique=True),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='deleted_record_count',
            field=models.IntegerField(blank=True, default=0, help_text='the number of darwin core records associated with this dataset not imported into the database', null=True),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='doi',
            field=models.TextField(blank=True, help_text='doi that uniquely identify this dataset', null=True),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='filtered_record_count',
            field=models.IntegerField(blank=True, default=0, help_text='the number of darwin core records associated with this dataset imported into the database', null=True),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='full_record_count',
            field=models.IntegerField(blank=True, help_text='the total number of darwin core records associated with this dataset before imported into the database', null=True),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='intellectual_right',
            field=models.TextField(blank=True, help_text='Contain a rights management statement for the resource, or reference a service providing such information', null=True),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='percentage_records_retained',
            field=models.FloatField(blank=True, default=100, help_text='the percentage of records associated with this dataset imported into the database, derived using filtered_record_count/full_record_count*100', null=True),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='pub_date',
            field=models.DateField(blank=True, help_text='The date on which the resource was published', null=True),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='tag',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True), blank=True, help_text='an array of texts to tag a dataset', null=True, size=None),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='title',
            field=models.TextField(help_text='the title of dataset'),
        ),
    ]
